[{"E:\\CODE\\React\\portfolio\\src\\index.js":"1","E:\\CODE\\React\\portfolio\\src\\App.js":"2","E:\\CODE\\React\\portfolio\\src\\Navbar.js":"3","E:\\CODE\\React\\portfolio\\src\\Nav.js":"4","E:\\CODE\\React\\portfolio\\src\\Home.js":"5","E:\\CODE\\React\\portfolio\\src\\About.js":"6","E:\\CODE\\React\\portfolio\\src\\Title.js":"7","E:\\CODE\\React\\portfolio\\src\\Services.js":"8","E:\\CODE\\React\\portfolio\\src\\Section.js":"9","E:\\CODE\\React\\portfolio\\src\\Skills.js":"10","E:\\CODE\\React\\portfolio\\src\\Contact.js":"11","E:\\CODE\\React\\portfolio\\src\\Footer.js":"12","E:\\CODE\\React\\portfolio\\src\\Reset.js":"13","E:\\CODE\\React\\portfolio\\src\\Preloader.js":"14"},{"size":174,"mtime":1607425559689,"results":"15","hashOfConfig":"16"},{"size":1137,"mtime":1611576949697,"results":"17","hashOfConfig":"16"},{"size":2705,"mtime":1611607048215,"results":"18","hashOfConfig":"16"},{"size":914,"mtime":1611607032266,"results":"19","hashOfConfig":"16"},{"size":1038,"mtime":1611576939374,"results":"20","hashOfConfig":"16"},{"size":2636,"mtime":1611594922894,"results":"21","hashOfConfig":"16"},{"size":186,"mtime":1607183719509,"results":"22","hashOfConfig":"16"},{"size":1944,"mtime":1611599498678,"results":"23","hashOfConfig":"16"},{"size":534,"mtime":1607183678477,"results":"24","hashOfConfig":"16"},{"size":3332,"mtime":1611599530975,"results":"25","hashOfConfig":"16"},{"size":8117,"mtime":1611600155580,"results":"26","hashOfConfig":"16"},{"size":260,"mtime":1607166926325,"results":"27","hashOfConfig":"16"},{"size":817,"mtime":1607236526191,"results":"28","hashOfConfig":"16"},{"size":439,"mtime":1607420434308,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"qpimro",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},"E:\\CODE\\React\\portfolio\\src\\index.js",[],["65","66"],"E:\\CODE\\React\\portfolio\\src\\App.js",[],["67","68"],"E:\\CODE\\React\\portfolio\\src\\Navbar.js",["69","70"],"import React, { useEffect, useState } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport nav from './Nav';\r\n\r\nfunction Navbar() {\r\n\r\n  const [navClass, setNavClass] = useState('navbar')\r\n  const [menuToggle, setMenuToggle] = useState({\r\n    listClass: 'menu',\r\n    button: <MenuRoundedIcon style={{ color: '#fff' }} />,\r\n    toggleStatus: false,\r\n  });\r\n\r\n  const toggleMenu = () => {\r\n\r\n    if (menuToggle.toggleStatus == false) {\r\n      setMenuToggle((preValue) => {\r\n        return {\r\n          listClass: 'menu active',\r\n          button: <CloseRoundedIcon style={{ color: '#fff' }} />,\r\n          toggleStatus: !preValue.toggleStatus,\r\n        }\r\n      });\r\n    } else if (menuToggle.toggleStatus == true) {\r\n      setMenuToggle((preValue) => {\r\n        return {\r\n          listClass: 'menu',\r\n          button: <MenuRoundedIcon style={{ color: '#fff' }} />,\r\n          toggleStatus: !preValue.toggleStatus,\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  window.addEventListener('scroll', () => {\r\n    if (window.scrollY > 20) {\r\n      setNavClass('navbar stickyNav');\r\n    } else {\r\n      setNavClass('navbar');\r\n    }\r\n  });\r\nuseEffect(()=>{\r\n  let path = document.getElementsByClassName(\"url\");\r\n  let logoPath = document.getElementById(\"logo\");\r\n  path[0].addEventListener('click',()=>{\r\n    window.scrollTo(0, 0);\r\n  });\r\n  path[1].addEventListener('click',()=>{\r\n    window.scrollTo(0, 580);\r\n  });\r\n  path[2].addEventListener('click',()=>{\r\n    window.scrollTo(0, 1092);\r\n  });\r\n  path[3].addEventListener('click',()=>{\r\n    window.scrollTo(0, 1645);\r\n  });\r\n  path[4].addEventListener('click',()=>{\r\n    window.scrollTo(0, 2500);\r\n  });\r\n\r\n  logoPath.addEventListener('click', ()=>{\r\n    window.scrollTo(0, 0);\r\n  })\r\n  \r\n},[])\r\n  \r\n\r\n  return (\r\n    <>\r\n      <nav className={navClass}>\r\n        <div className='max-width'>\r\n          <div className='logo' id = 'logo'><a href='https://zidanMehedi.github.io/portfolio/home'>zidan<span>Mehedi</span></a></div>\r\n\r\n          <ul className={menuToggle.listClass}>\r\n            {nav.map((val, index) => {\r\n              return (\r\n                <li key={index}>\r\n                  <a className = \"url\" onClick={toggleMenu} href={val.path}>{val.name}</a>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n\r\n          <div className='menu-btn'>\r\n            <IconButton onClick={toggleMenu} aria-label=\"MenuRoundedIcon\">\r\n              {menuToggle.button}\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;","E:\\CODE\\React\\portfolio\\src\\Nav.js",["71"],"E:\\CODE\\React\\portfolio\\src\\Home.js",["72"],"E:\\CODE\\React\\portfolio\\src\\About.js",["73","74","75"],"E:\\CODE\\React\\portfolio\\src\\Title.js",[],"E:\\CODE\\React\\portfolio\\src\\Services.js",[],"E:\\CODE\\React\\portfolio\\src\\Section.js",[],"E:\\CODE\\React\\portfolio\\src\\Skills.js",[],"E:\\CODE\\React\\portfolio\\src\\Contact.js",["76"],"E:\\CODE\\React\\portfolio\\src\\Footer.js",["77"],"import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n            <footer>\r\n                <span>Created by <a href='#'>zidanmehedi</a> | <span>&copy;</span> 2020 All Rights Reserved</span>\r\n            </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;",["78","79"],"E:\\CODE\\React\\portfolio\\src\\Reset.js",[],"E:\\CODE\\React\\portfolio\\src\\Preloader.js",["80"],"import React from 'react';\r\nimport loader from './Images/loader2.gif';\r\n\r\n\r\nfunction Preloader() {\r\n    return (\r\n        <>\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100vh', width: '100%', background: 'RGB(2, 0 , 0)' }}>\r\n                <img src={loader} style={{ height: '100px', width: '170px' }}></img>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Preloader;",["81","82"],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"83","replacedBy":"87"},{"ruleId":"85","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":18,"column":33,"nodeType":"91","messageId":"92","endLine":18,"endColumn":35},{"ruleId":"89","severity":1,"message":"90","line":26,"column":40,"nodeType":"91","messageId":"92","endLine":26,"endColumn":42},{"ruleId":"93","severity":1,"message":"94","line":30,"column":9,"nodeType":"95","messageId":"92","endLine":30,"endColumn":13},{"ruleId":"96","severity":1,"message":"97","line":10,"column":13,"nodeType":"98","endLine":10,"endColumn":52},{"ruleId":"99","severity":1,"message":"100","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":10},{"ruleId":"99","severity":1,"message":"103","line":16,"column":11,"nodeType":"101","messageId":"102","endLine":16,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":46,"column":17,"nodeType":"98","endLine":46,"endColumn":33},{"ruleId":"106","severity":1,"message":"107","line":27,"column":30,"nodeType":"108","endLine":27,"endColumn":45},{"ruleId":"109","severity":1,"message":"110","line":6,"column":34,"nodeType":"98","endLine":6,"endColumn":46},{"ruleId":"83","replacedBy":"111"},{"ruleId":"85","replacedBy":"112"},{"ruleId":"104","severity":1,"message":"105","line":9,"column":17,"nodeType":"98","endLine":9,"endColumn":79},{"ruleId":"83","replacedBy":"113"},{"ruleId":"85","replacedBy":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],["115"],["116"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-dupe-keys","Duplicate key 'path'.","ObjectExpression","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'cv' is defined but never used.","Identifier","unusedVar","'Download' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["115"],["116"],["115"],["116"],"no-global-assign","no-unsafe-negation"]